#BlueJ class context
comment0.target=Customer
comment0.text=\r\n\ Customer\ Object\r\n\ \r\n\ @author\ \ Ajar\ Duishembieva\r\n\r\n
comment1.params=name\ phoneNumber\ accountBalance
comment1.target=Customer(java.lang.String,\ java.lang.String,\ double)
comment1.text=\r\n\ Constructor\ for\ Customer\ Object\r\n\ \r\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ Name\ for\ Customer\r\n\ @param\ phoneNumber\ \ \ \ \ \ \ Phone\ Number\ for\ Customer\r\n\ @param\ accountBalance\ \ \ \ Account\ Balance\ for\ Customer\r\n
comment10.params=payment
comment10.target=void\ payBalance(double)
comment10.text=\r\n\ Method\ for\ paying\ the\ balance\ for\ a\ Customer.\ Accepts\ a\ payment\ amount\ as\ a\ parameter\ and\ subtracts\ that\ amount\r\n\ from\ the\ Customer's\ balance.\ Then\ the\ new\ balance\ is\ set.\ Throws\ if\ the\ payment\ amount\ is\ negative\ or\ zero.\r\n\ \r\n\ @param\ payment\ \ \ \ \ \ \ \ \ \ \ \ payment\ amount\r\n
comment11.params=charges
comment11.target=void\ addCharges(double)
comment11.text=\r\n\ Method\ for\ adding\ charges\ to\ a\ Customer\ balance.\ Accpets\ a\ charge\ amount\ as\ a\ parameter\ and\ adds\ that\ amount\r\n\ to\ the\ Customer's\ balance.\ Then\ the\ new\ balance\ is\ set.\ Throws\ if\ the\ charge\ amount\ is\ negative\ or\ zero.\r\n\ \r\n\ @param\ charges\ \ \ \ \ \ \ \ \ \ \ \ charged\ amount\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ String\ representatoin\ of\ Customer\ object\r\n\ \r\n\ @return\ String\r\n
comment2.params=name\ phoneNumber
comment2.target=Customer(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Constructor\ for\ Customer\ Object\ without\ balance.\ The\ balance\ will\ be\ set\ to\ zero\r\n\ \r\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ Name\ for\ Customer\r\n\ @param\ phoneNumber\ \ \ \ \ \ \ PhoneNumber\ for\ Customer\r\n
comment3.params=name
comment3.target=void\ setName(java.lang.String)
comment3.text=\ \r\n\ Mutator\ for\ setting\ the\ name\ of\ a\ customer.\ Name\ cannot\ be\ null\ or\ empty.\r\n\ \r\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ Name\ for\ Customer\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ Accessor\ for\ getting\ the\ name\ of\ a\ customer\r\n\ \r\n\ @return\ name\ \ \ \ \ \ \ \ \ \ \ \ \ Name\ for\ Customer\r\n
comment5.params=phoneNumber
comment5.target=boolean\ isValidPhoneNumber(java.lang.String)
comment5.text=\r\n\ Precondition\ test\ to\ determine\ if\ phone\ number\ is\ valid\r\n\ Uses\ regular\ expressions\ to\ ensure\ phone\ number\ matches\ a\ specific\ pattern\:\ 10\ digits\ in\ length\r\n\ \r\n\ @param\ phoneNumber\ \ \ \ \ \ \ phoneNumber\ for\ Customer\r\n\ @return\ phoneNumber\ \ \ \ \ \ phoneNumber\ for\ Customer\r\n
comment6.params=phoneNumber
comment6.target=void\ setPhoneNumber(java.lang.String)
comment6.text=\r\n\ Mutator\ method\ that\ sets\ the\ Phone\ Number\ \r\n\ Throws\ if\ the\ phone\ number\ is\ not\ valid\ 10\ digit\ continuous\ sequence\r\n\ \r\n\ @param\ phoneNumber\ \ \ \ \ \ \ phone\ number\ for\ Customer\r\n
comment7.params=
comment7.target=java.lang.String\ getPhoneNumber()
comment7.text=\r\n\ Accessor\ that\ gets\ the\ phoneNumber\r\n\ \r\n\ @return\ phoneNumber\ \ \ \ \ \ \ phone\ number\ for\ Customer\r\n
comment8.params=accountBalance
comment8.target=void\ setBalance(double)
comment8.text=\r\n\ Mutator\ method\ that\ sets\ the\ account\ balance\ for\ Customer\ object\r\n\ \r\n\ @param\ accountBalance\ \ \ \ \ account\ balance\ for\ Customer\r\n
comment9.params=
comment9.target=double\ getBalance()
comment9.text=\r\n\ Accessor\ method\ that\ gets\ the\ account\ balance\r\n\ \r\n\ @return\ accountBalance\ \ \ \ account\ balance\ for\ Customer\r\n
numComments=13
